name: Deploy Hola Mundo Lambda

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    outputs:
      lambda_endpoint: ${{ steps.set_lambda_endpoint.outputs.endpoint }}

    env:
      AWS_REGION: us-east-1

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Zip Lambda code
        run: |
          cd lambda
          zip -r ../terraform/lambda.zip main.py

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform -chdir=terraform init

      - name: Import existing IAM Role
        run: |
          terraform -chdir=terraform import aws_iam_role.lambda_exec hola-mundo-lambda-role || echo "Role already imported"

      - name: Import existing Lambda function
        run: |
          terraform -chdir=terraform import aws_lambda_function.hola_mundo hola-mundo || echo "Lambda already imported"

      - name: Import existing Lambda permission
        run: |
          terraform -chdir=terraform import aws_lambda_permission.api_gw hola-mundo/AllowAPIGatewayInvoke || echo "Permission already imported"

      - name: Terraform Apply
        run: terraform -chdir=terraform apply -auto-approve

      - name: Show Lambda endpoint
        run: terraform -chdir=terraform output lambda_api_url

      - name: Set Lambda endpoint output
        id: set_lambda_endpoint
        run: |
          echo "endpoint=$(terraform -chdir=terraform output -raw lambda_api_url)" >> $GITHUB_OUTPUT
